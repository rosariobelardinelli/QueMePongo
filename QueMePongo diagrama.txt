@startuml

Enum Categoria {
    PARTE_SUPERIOR
    PARTE_INFERIOR
    CALZADO
    ACCESORIO
}

class Material {
    tipoDeMaterial
    trama
}

Enum Trama {
    LISA,
    RAYADA,
    etc
}

Enum TipoDeMaterial {
    ALGODON,
    LANA,
    etc
}

Material -> TipoDeMaterial
Material -> Trama
Prenda -> Material
Prenda -> TipoDePrenda
TipoDePrenda -> Categoria

class TipoDePrenda {
    Categoria categoria()
}

class Prenda {
    Color colorPrimario
    Color colorSecundario

    Categoria categoria()
}

Prenda -> Color
Prenda -> Color

class Color {
    int nivelRojo
    int nivelAzul
    int nivelVerde
}

Borrador ..> Prenda 

class Borrador {
   TipoDePrenda tipo
   Material material
   Color colorPrimario
   Color colorSecundario
   Trama trama
   especificarTipo(TipoDePrenda)
   especificarMaterial(Material)
   especificarColorPrimario(ColorPrimario)
   especificarColorSecundario(ColorSecundario)
   especificarTrama(Trama)
   crearPrenda()
  
}

Uniforme -->"*" Prenda

class Uniforme{
}

abstract Sastre{
    fabricarUniforme()
    fabricarParteSuperior()
    fabricarParteInferior()
    fabricarCalzado()
}

class SastreSanJuan{
}

class SastreJohnson{
}

Sastre ..> Uniforme
SastreSanJuan -|> Sastre
SastreJohnson -|> Sastre

class Atuendo {
    Prenda prendaSuperior
    Prenda prendaInferior
    Prenda calzado
    Prenda accesorio
    
    boolean aptoParaTemperaturas(int temperatura)
}

Atuendo -->"*" Prenda

class Sugerencia {
    Atuendo getSugerencia(Map<String, Object>);
}

Sugerencia ..> Atuendo
Sugerencia ..> ProveedorDeClima

interface AccuWeatherAPI{
    List<Map<String, Object>> getWeather(String ciudad)
}

class ProveedorDeClima {
    AccuWeatherAPI api
}

ProveedorDeClima --> AccuWeatherAPI

Usuario -->"*" Guardarropa
Usuario -->"*" Modificacion
Usuario --> Borrador

class Usuario{
    rechazarPropuesta(Modificacion)
    aceptarPropuesta(Modificacion)
    deshacerModificacion(Modificacion)
}

Guardarropa -->"*" Prenda
Guardarropa -->"*" Usuario
class Guardarropa {
    agregarPrenda(Prenda)
    sacarPrenda(Prenda)
}

Modificacion --> Guardarropa
Modificacion --> Prenda

interface Modificacion {
    void hacerModificacion()
    void deshacerModificacion()
}


class ModificacionAgregarPrenda implements Modificacion {
}

class ModificacionSacarPrenda implements Modificacion {
}


@enduml